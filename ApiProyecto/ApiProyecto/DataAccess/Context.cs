// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using ApiProyecto.Models;

namespace ApiProyecto.DataAccess
{
    public partial class Context : DbContext
    {
        public Context()
        {
        }

        public Context(DbContextOptions<Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Genero> Genero { get; set; }
        public virtual DbSet<Libro> Libro { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Genero>(entity =>
            {
                entity.HasKey(e => e.IdGenero)
                    .HasName("pk_genero");

                entity.ToTable("genero");

                entity.Property(e => e.IdGenero).HasColumnName("idGenero");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("nombre");
            });

            modelBuilder.Entity<Libro>(entity =>
            {
                entity.HasKey(e => e.Isbn)
                    .HasName("pk_libro");

                entity.ToTable("libro");

                entity.Property(e => e.Isbn)
                    .ValueGeneratedNever()
                    .HasColumnName("isbn");

                entity.Property(e => e.Autor)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("autor");

                entity.Property(e => e.IdGenero).HasColumnName("idGenero");

                entity.Property(e => e.Precio).HasColumnName("precio");

                entity.Property(e => e.Stock).HasColumnName("stock");

                entity.Property(e => e.Titulo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("titulo");
            });

            modelBuilder.Entity<Usuario>(entity =>
            {
                entity.HasKey(e => e.IdUsuario)
                    .HasName("pk_usuario");

                entity.ToTable("usuario");

                entity.Property(e => e.IdUsuario).HasColumnName("idUsuario");

                entity.Property(e => e.Apellidos)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasColumnName("apellidos");

                entity.Property(e => e.Contrasenia)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasColumnName("contrasenia");

                entity.Property(e => e.Correo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("correo");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("nombre");

                entity.Property(e => e.tipo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("tipo");
            });

            modelBuilder.Entity<Venta>(entity =>
            {
                entity.HasKey(e => new { e.IdVenta, e.IdUsuario, e.Isbn })
                    .HasName("pk_venta");

                entity.ToTable("venta");

                entity.Property(e => e.IdVenta)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("idVenta");

                entity.Property(e => e.IdUsuario).HasColumnName("idUsuario");

                entity.Property(e => e.Isbn).HasColumnName("isbn");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}